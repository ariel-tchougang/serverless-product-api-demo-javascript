service: product-api-node16

provider:
  name: aws
  runtime: nodejs16.x
  region: ${opt.region, "eu-west-1"}
  stage: ${opt.stage, "dev"}
  memorySize: 128
  timeout: 10
  tracing:
    apiGateway: true
    lambda: true
  environment:
    TABLE_NAME: ${self:custom.DynamoDBTableName}

custom:
  DynamoDBTableName: ServerlessFrameworkDemoTable

functions:
  getItemsFunction:
    handler: src/handlers/get-items.getItemsHandler
    role: getItemsFunctionRole
    events:
      - http:
          path: /products
          method: get
      - http:
          path: /products/{id}
          method: get

  createItemFunction:
    handler: src/handlers/create-item.createItemHandler
    role: createItemFunctionRole
    events:
      - http:
          path: /products
          method: post

  updateItemFunction:
    handler: src/handlers/update-item.updateItemHandler
    role: updateItemFunctionRole
    events:
      - http:
          path: /products/{id}
          method: put

  deleteItemFunction:
    handler: src/handlers/delete-item.deleteItemHandler
    role: deleteItemFunctionRole
    events:
      - http:
          path: /products/{id}
          method: delete

resources:
  Resources:
    DynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.DynamoDBTableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
            
    DynamoDBBasicReadPolicy:
      Type: AWS::IAM::ManagedPolicy
      Properties: 
        Description: "Allows basic DynamoDB read actions for Lambda functions"
        PolicyDocument:
          Version: "2012-10-17"
          Sid: "AllowBasicDynamoDBReadActions"
          Statement:
            - Effect: Allow
              Action:
                - "dynamodb:GetItem"
                - "dynamodb:Query"
                - "dynamodb:Scan"
                - "dynamodb:BatchGetItem"
                - "s3:GetObject"
              Resource:
                - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.DynamoDBTableName}"
                - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.DynamoDBTableName}/index/*"
            
    DynamoDBBasicWritePolicy:
      Type: AWS::IAM::ManagedPolicy
      Properties: 
        Description: "Allows basic DynamoDB write actions for Lambda functions"
        PolicyDocument:
          Version: "2012-10-17"
          Sid: "AllowBasicDynamoDBWriteActions"
          Statement:
            - Effect: Allow
              Action:
                - "dynamodb:PutItem"
                - "dynamodb:UpdateItem"
                - "dynamodb:BatchWriteItem"
                - "dynamodb:ConditionCheckItem"
              Resource:
                - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.DynamoDBTableName}"
                - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.DynamoDBTableName}/index/*"
            
    DynamoDBBasicDeletePolicy:
      Type: AWS::IAM::ManagedPolicy
      Properties: 
        Description: "Allows basic DynamoDB delete item for Lambda functions"
        PolicyDocument:
          Version: "2012-10-17"
          Sid: "AllowBasicDynamoDBDeleteItemAction"
          Statement:
            - Effect: Allow
              Action:
                - "dynamodb:DeleteItem"
              Resource:
                - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.DynamoDBTableName}"
                - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.DynamoDBTableName}/index/*"
            
    LambdaLoggingPolicy:
      Type: AWS::IAM::ManagedPolicy
      Properties: 
        Description: "Allows basic logging actions for Lambda functions"
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Sid: "AllowBasicLoggingActions"
              Action:
                - "logs:CreateLogGroup"
                - "logs:CreateLogStream"
                - "logs:PutLogEvents"
              Resource: "*"
            
    AWSXrayWriteOnlyPolicy:
      Type: AWS::IAM::ManagedPolicy
      Properties: 
        Description: "Allows X-Ray write access"
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Sid: "AWSXrayWriteOnlyAccess"
              Action:
                - "xray:PutTraceSegments"
                - "xray:PutTelemetryRecords"
                - "xray:GetSamplingRules"
                - "xray:GetSamplingTargets"
                - "xray:GetSamplingStatisticSummaries"
              Resource: "*"
            
    getItemsFunctionRole:
      Type: AWS::IAM::Role
      Properties:
        # RoleName: getItemsFunctionRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action:
                - sts:AssumeRole
        ManagedPolicyArns:
          - Ref: DynamoDBBasicReadPolicy
          - Ref: LambdaLoggingPolicy
          - Ref: AWSXrayWriteOnlyPolicy
            
    createItemFunctionRole:
      Type: AWS::IAM::Role
      Properties:
        # RoleName: createItemFunctionRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action:
                - sts:AssumeRole
        ManagedPolicyArns:
          - Ref: DynamoDBBasicWritePolicy
          - Ref: LambdaLoggingPolicy
          - Ref: AWSXrayWriteOnlyPolicy
            
    updateItemFunctionRole:
      Type: AWS::IAM::Role
      Properties:
        # RoleName: updateItemFunctionRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action:
                - sts:AssumeRole
        ManagedPolicyArns:
          - Ref: DynamoDBBasicWritePolicy
          - Ref: LambdaLoggingPolicy
          - Ref: AWSXrayWriteOnlyPolicy
            
    deleteItemFunctionRole:
      Type: AWS::IAM::Role
      Properties:
        # RoleName: deleteItemFunctionRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action:
                - sts:AssumeRole
        ManagedPolicyArns:
          - Ref: DynamoDBBasicDeletePolicy
          - Ref: LambdaLoggingPolicy
          - Ref: AWSXrayWriteOnlyPolicy
                    
